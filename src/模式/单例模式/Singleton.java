package 模式.单例模式;
/*
单例模式

优点：
1、在单例模式中，活动的单例只有一个实例，对单例类的所有实例化得到的都是同一个实例，这样可以防止其他对象对自己实例，确保所有对象访问一个实例
2、内存中只有一个实例，减少内存开支，减少系统的性能消耗
3、类控制自己实例化的过程，在改变类的实例化的过程中具有伸缩性

缺点：
1、如果同一类型的对象总在不同的场景发生变化，单例模式就会引起数据错误
2、单例模式没有抽象层，不易扩展
3、如果实例化的对象长时间不被利用，系统会认为它是垃圾而进行回收，导致对象状态丢失

应用场景：
1、需要频繁实例化并销毁的对象
2、创建对象需要耗时过多或者消耗资源过大，但又经常用到的对象
3、频繁访问数据库和文件的对象

具体使用：
打开和关闭数据库连接、读取应用配置和写入日志文件
 */
public class Singleton {

  private Singleton(){

  }
  private static Singleton instance;

  public static Singleton getInstance(){
      if(instance==null){
          instance=new Singleton();
      }
      return instance;

  }

}
